const NodeGeocoder = require('node-geocoder');
const fetch = require("node-fetch");
const url = "https://api.darksky.net/forecast/5fa32b461f90f5da9e09ee68fcd379ca/"

const options = {
    provider: 'google',
    // Optional depending on the providers
    httpAdapter: 'https', // Default
    apiKey: 'AIzaSyAJlUpYsiRuef84E7ZX_mbmFoxmvPb4LsQ', // for Mapquest, OpenCage, Google Premier
    formatter: null         // 'gpx', 'string', ...
};
   
const geocoder = NodeGeocoder(options);

const mystery = (cb) => {
    console.log("'mystery' ran")
    return cb(Math.PI)
}

const something = (cb) => {
    console.log("'something' ran")
    cb("Here is some text. You're welcome.")
}

const mangle = (num, cb) => {
    console.log("'mangle' ran")
    const res = num ** 7
    cb(res)
}

const complexReturn = (arg1, arg2, cb) => {
    console.log("'complexReturn' ran")
    const obj = {
        key1: arg1,
        key2: arg2
    }
    cb(obj)
}

const waitUp = (num, cb) => {
    console.log("'waitUp' is running..")
    setTimeout(() => {
        cb(`waitUp ran for ${num} seconds before hitting the callback`)
    }, num * 1000)
}

const whatIsIt = (cb) => {
    console.log("'whatIsIt' ran")
    cb(
        function(){
            console.log("You got me out!")
        }
    )
}

const easterEgg = (cb) => {
    let x = null
    let y = null 
    let z = null
    let a = null
    console.log("'easterEgg' ran")
    let b = "EASTER EGG!"
    cb(x, y, z, a, b)
}

const arrRes = (arr, cb) => {
    const first = arr[0]
    const last = arr[arr.length - 1]
    cb(first + last)
}

const whereAmI = (string, cb) => {
    // Using callback
    geocoder.geocode(string, function(err, res) {
        if(err){
            console.log(err)
        }
        else {
            cb(res)
        }
    });
}

const whatToWear = (string, cb) => {
    // Using callback
    geocoder.geocode(string, function(err, res) {

        if(err){
            console.log(err)
        }
    //   console.log(res);
        const lat = res[0].latitude
        const lng = res[0].longitude

        const getData = async url => {
            try {
                const newUrl = url + lat.toString() + "," + lng.toString() + "?units=si"
                const response = await fetch(newUrl);
                const json = await response.json();
                // console.log(json);
                cb(json.currently)
            } catch (err) {
                console.log(err);
            }
        };
        getData(url);
    });
}

module.exports = {
    mystery,
    something,
    mangle,
    waitUp,
    complexReturn,
    whatIsIt,
    easterEgg,
    arrRes,
    whereAmI,
    whatToWear
}